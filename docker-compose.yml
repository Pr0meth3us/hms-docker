version: '3'
services:
  portainer:
    image: portainer/portainer:latest
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    restart: ${RESTARTPOLICY}
    networks:
      - web
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DATAFOLDER}/portainer:/data
    labels:
      - traefik.enable=true
      - traefik.frontend.rule=Host:portainer.${LOCALDOMAIN}
      - traefik.port=9000
      - traefik.frontend.entryPoints=http

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: ${RESTARTPOLICY}
    networks:
      - web
    command: --cleanup --schedule "0 0 9 * * *"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  traefik:
    image: traefik:v1.7
    container_name: traefik
    restart: ${RESTARTPOLICY}
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    networks:
      - web
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${DATAFOLDER}/traefik/traefik.toml:/traefik.toml:ro
      - ${DATAFOLDER}/traefik/acme.json:/acme.json
    labels:
      - traefik.enable=true
      - traefik.frontend.rule=Host:traefik.${LOCALDOMAIN}
      - traefik.port=8080
      - traefik.frontend.entryPoints=http

  transmission:
    image: haugene/transmission-openvpn:latest
    container_name: transmission
    restart: ${RESTARTPOLICY}
    depends_on:
      - traefik
    networks:
      - torrent_net
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    ports:
      - 9091:9091
      - 8888:8888
    dns:
      - 1.1.1.1
      - 1.0.0.1
    volumes:
      - ${DATAFOLDER}/transmission:/data
      - ${MOUNTFOLDER}/transmission/incomplete:/incomplete
      - ${MOUNTFOLDER}/transmission/completed:/completed
    logging:
      driver: json-file
      options:
        max-size: 10m
    environment:
      - OPENVPN_PROVIDER=${VPNPROVIDER}
      - OPENVPN_USERNAME=${VPNUSER}
      - OPENVPN_PASSWORD=${VPNPASS}
      - OPENVPN_OPTS=--inactive 3600 --ping 10 --ping-exit 60
      - TRANSMISSION_WEB_UI=transmission-web-control # OPTIONAL - just a different UI
      - TRANSMISSION_DOWNLOAD_QUEUE_SIZE=25
      - TRANSMISSION_MAX_PEERS_GLOBAL=3000
      - TRANSMISSION_PEER_LIMIT_GLOBAL=3000
      - TRANSMISSION_PEER_LIMIT_PER_TORRENT=300
      - TRANSMISSION_DOWNLOAD_DIR=/completed
      - TRANSMISSION_INCOMPLETE_DIR=/incomplete
      - TRANSMISSION_RATIO_LIMIT=${RATIO_LIMIT}
      - TRANSMISSION_RATIO_LIMIT_ENABLED=${RATIO_ENABLED}
      - TRANSMISSION_WATCH_DIR_ENABLED=false
      - HEALTH_CHECK_HOST=google.com
      - LOCAL_NETWORK=${HOSTSUBNET}
      - TZ=${TZ}
      - WEBPROXY_ENABLED=true
      - WEBPROXY_PORT=8888

  proxy:
    image: haugene/transmission-openvpn-proxy:latest
    container_name: proxy
    restart: ${RESTARTPOLICY}
    networks:
      - torrent_net
      - web
    depends_on:
      - transmission
    environment:
      - TZ=${TZ}
    ports:
      - 8081:8080
    labels:
      - traefik.enable=true
      - traefik.frontend.rule=Host:transmission.${LOCALDOMAIN}
      - traefik.port=8080
      - traefik.frontend.entryPoints=http

  jackett:
    image: linuxserver/jackett:latest
    container_name: jackett
    restart: ${RESTARTPOLICY}
    depends_on:
      - traefik
      - proxy
    networks:
      - torrent_net
      - web
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      # folder where config will be stored
      - ${DATAFOLDER}/jackett/config:/config
      # not entirely sure what this folder does, I think it's for torrents you decide to download through Jackett, but you have Sonarr and Radarr for that
      - ${MOUNTFOLDER}/jackett/blackhole:/downloads
    ports:
      - 9117:9117
    labels:
      - traefik.enable=true
      - traefik.frontend.rule=Host:jackett.${LOCALDOMAIN}
      - traefik.port=9117
      - traefik.frontend.entryPoints=http

  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    restart: ${RESTARTPOLICY}
    networks:
      - torrent_net
      - web
    depends_on:
      - transmission
      - jackett
      - traefik
      - plex
      - proxy
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels:
      - traefik.enable=true
      - traefik.frontend.rule=Host:sonarr.${LOCALDOMAIN}
      - traefik.port=8989
      - traefik.frontend.entryPoints=http
    volumes:
      # folder where config will be stored
      - ${DATAFOLDER}/sonarr/config:/config
      # plex series folder location
      - ${MOUNTFOLDER}/MEDIA/tv:/tv
      # completed downloads location
      - ${MOUNTFOLDER}/transmission/completed:/completed
    ports:
      - 8989:8989

  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    restart: ${RESTARTPOLICY}
    networks:
      - torrent_net
      - web
    depends_on:
      - transmission
      - jackett
      - traefik
      - plex
      - proxy
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels:
      - traefik.enable=true
      - traefik.frontend.rule=Host:radarr.${LOCALDOMAIN}
      - traefik.port=7878
      - traefik.frontend.entryPoints=http
    volumes:
      # folder where config will be stored
      - ${DATAFOLDER}/radarr/config:/config
      # plex movie folder location
      - ${MOUNTFOLDER}/MEDIA/movies:/movies
      # completed downloads location
      - ${MOUNTFOLDER}/transmission/completed:/completed
    ports:
      - 7878:7878

  ombi:
    image: linuxserver/ombi:latest
    container_name: ombi
    restart: ${RESTARTPOLICY}
    depends_on:
      - sonarr
      - radarr
      - plex
      - traefik
      - mysql
    networks:
      - plex_net
      - torrent_net
      - web
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels:
      - traefik.enable=true
      - traefik.frontend.rule=Host:ombi.${LOCALDOMAIN}
      - traefik.port=3579
      - traefik.frontend.redirect.entryPoint=https
      - traefik.frontend.headers.SSLRedirect=true
    volumes:
      # folder where config will be stored
      - ${DATAFOLDER}/ombi/config:/config
    ports:
      - 3579:3579

  mysql:
    image: mysql:8.0.22
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: ${RESTARTPOLICY}
    networks:
      - plex_net
    environment:
      MYSQL_ROOT_PASSWORD: hmsdocker
    volumes:
      # initializes database on first run
      - ./database:/docker-entrypoint-initdb.d
      # folder where database data is stored
      - ${DATAFOLDER}/mysql:/var/lib/mysql

  adminer:
    image: adminer:latest
    container_name: adminer
    restart: ${RESTARTPOLICY}
    networks:
      - plex_net
    ports:
      - 8082:8080

  plex:
    image: plexinc/pms-docker:latest
    container_name: plex
    restart: ${RESTARTPOLICY}
    depends_on:
      - traefik
    networks:
      - plex_net
      - web
    ports:
      - 32400:32400/tcp
      - 3005:3005/tcp
      - 8324:8324/tcp
      - 32469:32469/tcp
      - 1900:1900/udp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
    environment:
      - TZ=${TZ}
      - PLEX_CLAIM=${PLEX_CLAIM}
      - ADVERTISE_IP=${HOSTIP}:32400
      - ALLOWED_NETWORKS=${HOSTSUBNET}
    hostname: plex-docker
    volumes:
      # folder where config will be stored
      - ${DATAFOLDER}/plex/config:/config
      # temp folder for Plex transcoding
      - ${DATAFOLDER}/plex/temp:/transcode
      # media folder where all movies and series are stored
      - ${MOUNTFOLDER}/MEDIA:/data
    labels:
      - traefik.enable=true
      - traefik.frontend.rule=Host:plex.${LOCALDOMAIN}
      - traefik.port=32400
      - traefik.frontend.entryPoints=http

  tautulli:
    image: tautulli/tautulli:latest
    container_name: tautulli
    restart: ${RESTARTPOLICY}
    depends_on:
      - plex
      - traefik
    networks:
      - plex_net
      - web
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels:
      - traefik.enable=true
      - traefik.frontend.rule=Host:tautulli.${LOCALDOMAIN}
      - traefik.port=8181
      - traefik.frontend.entryPoints=http
    ports:
      - 8181:8181
    volumes:
      # folder where config will be stored
      - ${DATAFOLDER}/tautulli/config:/config
      # Plex logs location
      - ${DATAFOLDER}/plex/config/Library/Application Support/Plex Media Server/Logs:/plex_logs:ro

networks:
  torrent_net:
    driver: bridge
  plex_net:
    driver: bridge
  web:
    driver: bridge
